#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET   -1

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Example bitmaps (replace with your actual data)
static const uint8_t image1[1024] = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB7, 0x76, 0x0D, 0xD5, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0x55, 0x5C, 0x00, 0xFD, 0x55, 0x55, 0xB5, 0x55, 0x05, 0x55, 0x17, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0xF3, 0xFF, 0x07, 0xFF, 0xFF, 0xB6, 0x75, 0x05, 0x59, 0x87, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0x57, 0x8F, 0xFF, 0xF8, 0xF5, 0x55, 0xB5, 0x55, 0x15, 0x55, 0x17, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xFE, 0x7F, 0xFF, 0xFF, 0x3F, 0xFF, 0xB7, 0x56, 0x1D, 0xD5, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0x59, 0xFF, 0xFF, 0xFF, 0xCD, 0x55, 0xB0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xF7, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0x6F, 0xFF, 0xFF, 0xFF, 0xDB, 0x55, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xDF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0xDF, 0xFF, 0xFF, 0xFF, 0x5E, 0xD5, 0xBC, 0x9D, 0xBE, 0x78, 0xDD, 0xED, 0x8C, 0xE3, 0x63, 0x9F, 0xAF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xBD, 0x6B, 0x7D, 0xB7, 0xBD, 0xDB, 0x7B, 0x6D, 0x5F, 0x95, 0x97, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0xBD, 0xEC, 0x7D, 0xB3, 0x7B, 0xE3, 0x3B, 0x61, 0xC7, 0x9F, 0x6B, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xBB, 0xDE, 0xFB, 0xAF, 0x5B, 0xF6, 0xF0, 0xDB, 0xF7, 0x97, 0x55, 0xFF, 0xFF, 0xFF, 0xFF, 0x75, 0xBB, 0xB9, 0xFB, 0x61, 0x27, 0xCE, 0x16, 0xDD, 0x8F, 0x9E, 0xEA, 0xAF, 0xFF, 0xFF, 0xFE, 0xBF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x96, 0xFD, 0x7F, 0xFF, 0xFF, 0xFD, 0x35, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9E, 0xFF, 0xFF, 0x7F, 0xFB, 0xEA, 0xBF, 0xBC, 0x78, 0xC6, 0x3B, 0xA8, 0xD9, 0xE7, 0x87, 0xFF, 0x96, 0xFF, 0xFF, 0x7F, 0xFB, 0xD5, 0xD5, 0xBD, 0xB7, 0xBD, 0xB7, 0x6D, 0xB6, 0xDB, 0x77, 0xFF, 0x9E, 0xFF, 0xFF, 0x3F, 0xFB, 0xEB, 0xDF, 0xBC, 0x33, 0x8D, 0xB7, 0x5D, 0xB6, 0xDB, 0xC7, 0xFF, 0x96, 0xFF, 0xF7, 0x3F, 0xF9, 0xFF, 0xED, 0xBB, 0x6F, 0xEB, 0xAE, 0xDB, 0x6E, 0xBB, 0xFF, 0xFF, 0x9E, 0xFF, 0xF6, 0x3F, 0xF9, 0xFF, 0xEF, 0xBB, 0xA1, 0x18, 0x62, 0x3B, 0x61, 0xB7, 0xBF, 0xFF, 0x96, 0xFF, 0xF6, 0x3F, 0xF9, 0xFF, 0xED, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9E, 0xFF, 0xE6, 0x3F, 0xF8, 0xFF, 0xEF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0x7F, 0xE4, 0x3F, 0xF8, 0xFF, 0xF5, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9C, 0xBF, 0xE7, 0xFF, 0xFF, 0xFF, 0xF7, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0xFF, 0xCC, 0x37, 0xF8, 0xDF, 0xF5, 0xBE, 0x79, 0xE7, 0x9C, 0x78, 0xE7, 0x1B, 0xB7, 0xFF, 0x9D, 0xFF, 0xD4, 0x17, 0xF8, 0xDF, 0xF7, 0xBD, 0xB6, 0xDB, 0x6D, 0xB7, 0xDB, 0xB7, 0x6F, 0xFF, 0x95, 0xFF, 0xC0, 0x13, 0xF0, 0x5F, 0xF7, 0xBD, 0xB6, 0xDB, 0x6C, 0x33, 0xDB, 0xB7, 0x8F, 0xFF, 0x9D, 0xFF, 0xDF, 0xCB, 0xF7, 0xCF, 0xFB, 0xB8, 0x61, 0x86, 0x1B, 0x6F, 0xBB, 0x6F, 0xDF, 0xFF, 0x95, 0xFF, 0xB7, 0x29, 0xFF, 0x6F, 0xFB, 0xBB, 0x6F, 0xBE, 0xDB, 0xA1, 0xB7, 0x63, 0x3F, 0xFF, 0x9D, 0xFF, 0xA7, 0x84, 0xD7, 0xBF, 0xFB, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0xFF, 0xA7, 0x80, 0xC7, 0x9B, 0xFB, 0xBE, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0x9D, 0xFF, 0xE7, 0x80, 0x47, 0x9B, 0xFD, 0xBE, 0x27, 0x1E, 0x00, 0x18, 0x91, 0xDF, 0xFF, 0xFF, 0x95, 0xFF, 0xC7, 0x80, 0x07, 0x97, 0xFD, 0xBC, 0xC0, 0xA2, 0x24, 0x21, 0x11, 0x9F, 0xFF, 0xFF, 0x9D, 0xFF, 0xC3, 0x00, 0x03, 0x07, 0xFD, 0xBC, 0x47, 0x3C, 0x18, 0x3D, 0xE3, 0xBF, 0xFF, 0xFF, 0x95, 0xFF, 0xC0, 0x00, 0x00, 0x07, 0xFD, 0xB8, 0x88, 0x44, 0x24, 0x44, 0x23, 0xFF, 0xFF, 0xFF, 0x9D, 0xFB, 0xC4, 0x00, 0x00, 0x0F, 0xFD, 0xB9, 0xEF, 0x7C, 0x48, 0x78, 0x47, 0x7F, 0xFF, 0xFF, 0x95, 0xF3, 0xD2, 0x00, 0x02, 0x0F, 0xFD, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x9D, 0xF3, 0xC8, 0x00, 0x04, 0x8F, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x95, 0xF3, 0xC0, 0x00, 0x01, 0x0F, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9D, 0xF3, 0xC0, 0x00, 0x00, 0x1D, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xE3, 0xA0, 0x40, 0x00, 0x1E, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xED, 0xA0, 0x3F, 0xE0, 0x1E, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xED, 0xB0, 0x10, 0x40, 0x2E, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xED, 0xB8, 0x08, 0x80, 0x6E, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xED, 0xAC, 0x05, 0x00, 0xEE, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xED, 0xBE, 0x00, 0x03, 0xEE, 0xFD, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xED, 0xDE, 0x80, 0x0E, 0xAE, 0xFE, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0xEE, 0xDD, 0x60, 0x6F, 0xED, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0xEE, 0xDD, 0xBF, 0xDA, 0xAD, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0xEE, 0xEB, 0x55, 0x5F, 0xED, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0xEF, 0x66, 0xAA, 0xDA, 0xAD, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0xDF, 0x6C, 0x54, 0x6F, 0xED, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x97, 0xDF, 0x2C, 0x28, 0x36, 0xAD, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7D, 0x97, 0xDE, 0xAC, 0x00, 0x1B, 0xED, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7D, 0x97, 0xDD, 0xCC, 0x00, 0x15, 0xED, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x39, 0x97, 0x03, 0xEC, 0x00, 0x16, 0x0B, 0x7E, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x11, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
static const uint8_t image2[1024] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0xF8, 0x00, 0x00, 0x00, 0x64, 0xDB, 0xAB, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x7F, 0x3E, 0x03, 0x3A, 0xCE, 0x54, 0x92, 0xAB, 0x32, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE7, 0xFF, 0xCF, 0x81, 0x28, 0x4A, 0x65, 0x9B, 0x93, 0xAB, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0xFF, 0xF3, 0xC3, 0xBA, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x7F, 0xFF, 0xFC, 0xF0, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xFB, 0xFF, 0xFF, 0xFF, 0x9D, 0x11, 0x11, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAB, 0xE7, 0xFF, 0xFD, 0xFF, 0xEE, 0xAA, 0xAA, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x47, 0xDF, 0xFF, 0xFE, 0xFF, 0xF7, 0x44, 0x44, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFB, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x5E, 0xFF, 0xFF, 0xFF, 0xBF, 0xFD, 0xD5, 0x55, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xBD, 0xFF, 0xFF, 0xFF, 0xEF, 0xFE, 0xEA, 0xAA, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x7B, 0xFF, 0xBF, 0xFF, 0xF7, 0xFF, 0x75, 0x55, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xF7, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xBB, 0xBB, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xEF, 0xBF, 0xBF, 0xFF, 0xFD, 0xF7, 0xBD, 0x55, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEF, 0xCF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xDE, 0xEE, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x57, 0xDB, 0x7F, 0xEF, 0xFF, 0xFF, 0x7B, 0xED, 0x55, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBF, 0xFF, 0xF7, 0xFF, 0xFF, 0x7B, 0xEF, 0xBB, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x57, 0xAB, 0xFF, 0xF9, 0xFE, 0x0F, 0xFF, 0xF7, 0x55, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0x7F, 0xFE, 0xF9, 0xF7, 0xFD, 0xF7, 0xFF, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x57, 0x6B, 0xBF, 0xFF, 0x77, 0xFB, 0xFD, 0xF7, 0x55, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xBF, 0xFF, 0xA8, 0x03, 0xFD, 0xF7, 0xFF, 0xB6, 0xDB, 0x6D, 0xB6, 0xDB, 0x6D, 0xB6, 0xDE, 0x6B, 0xDF, 0xFF, 0xD0, 0x01, 0xFE, 0xFB, 0xB6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xDF, 0xFF, 0xE0, 0x7C, 0xFE, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xAF, 0xEF, 0xFF, 0xF3, 0xFE, 0xFE, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xF7, 0xFF, 0xF7, 0x04, 0x7E, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xAF, 0xF7, 0xFF, 0xEF, 0x84, 0x7F, 0x7E, 0xFF, 0xFF, 0x6F, 0x1B, 0xBF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xEB, 0xFF, 0xDF, 0x88, 0x7F, 0x7E, 0xFF, 0xFE, 0xF6, 0xF7, 0x7F, 0xFF, 0xFF, 0xFF, 0xFB, 0xEF, 0xD0, 0xFF, 0xBF, 0x80, 0x7F, 0x7F, 0x7F, 0xFE, 0xF6, 0x77, 0x7F, 0xFF, 0xFF, 0xFF, 0xF6, 0xFF, 0xE1, 0xFF, 0x6F, 0x84, 0xFF, 0x7F, 0x7F, 0xFD, 0xAD, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xF4, 0xFF, 0xC7, 0x3F, 0x47, 0x08, 0xFF, 0x7F, 0xBF, 0xFE, 0x4C, 0x22, 0x2A, 0xFF, 0xFF, 0xFF, 0xFA, 0xFF, 0xCE, 0x1E, 0x00, 0x20, 0xFF, 0x4F, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFB, 0xDE, 0x00, 0x00, 0x00, 0xFF, 0x87, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFB, 0xFF, 0x0A, 0x00, 0x00, 0x7F, 0x07, 0xDF, 0xFF, 0x6F, 0x6C, 0xC7, 0xCF, 0x67, 0xFF, 0xFE, 0xFD, 0xEF, 0x08, 0x01, 0x00, 0x7F, 0x07, 0xDF, 0xFE, 0xF6, 0xDB, 0x6F, 0xB6, 0xDB, 0xFF, 0xFF, 0x7D, 0xDF, 0x10, 0x02, 0x00, 0x7F, 0x27, 0xDF, 0xFE, 0xF6, 0x1B, 0x6F, 0xB6, 0xDB, 0xFF, 0xFF, 0x7E, 0xCE, 0x28, 0x00, 0x00, 0x7F, 0x47, 0xDF, 0xFD, 0xAD, 0xB0, 0xDF, 0x6D, 0xB7, 0xFF, 0xFF, 0x77, 0x50, 0x50, 0x00, 0x00, 0x7F, 0xA7, 0xEF, 0xFE, 0x4D, 0xB6, 0xDF, 0x1D, 0x8F, 0xFF, 0xFF, 0xAB, 0xC0, 0x60, 0x00, 0x04, 0x7F, 0x07, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0xC0, 0x30, 0x00, 0x04, 0x7F, 0x0F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCC, 0xC0, 0x10, 0x00, 0x04, 0x7F, 0x0F, 0xF7, 0xFE, 0xD9, 0xEB, 0xE2, 0xD9, 0xC6, 0x23, 0x1F, 0xF5, 0x00, 0x00, 0x00, 0x04, 0x7F, 0x9F, 0xF7, 0xFD, 0xD6, 0xDB, 0xDF, 0x36, 0xBD, 0xF7, 0xEF, 0xFD, 0xC0, 0x00, 0x00, 0x04, 0x7F, 0xFF, 0xF7, 0xFE, 0x36, 0xDB, 0xCE, 0xB1, 0x9B, 0xF7, 0x9F, 0xFD, 0xC0, 0x00, 0x00, 0x04, 0x7F, 0xFF, 0xF7, 0xFF, 0x6E, 0xB7, 0xBD, 0xAF, 0x7B, 0xEF, 0xFF, 0xFD, 0xC0, 0x00, 0x00, 0x02, 0x3F, 0xBF, 0xFB, 0xFC, 0xE1, 0x87, 0x85, 0xAF, 0x0C, 0x6F, 0x7F, 0xFD, 0xE0, 0x00, 0x00, 0x04, 0x3F, 0xBF, 0xBB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xE0, 0x00, 0x00, 0x00, 0x5F, 0xBF, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xF0, 0x00, 0x00, 0x00, 0x5F, 0xBF, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xF0, 0x00, 0x00, 0x00, 0x5F, 0xBF, 0xDD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xF8, 0x1F, 0x80, 0x00, 0xDF, 0xBF, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFC, 0x08, 0x40, 0x01, 0xDF, 0xBF, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFE, 0x07, 0xE0, 0x01, 0xDF, 0x7F, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0x03, 0xE0, 0x03, 0x5F, 0x7F, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0x80, 0x00, 0x0E, 0xDF, 0xFF, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0xC0, 0x00, 0x1D, 0x5F, 0xFF, 0xED, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0xF0, 0x00, 0x7A, 0xDE, 0xFF, 0xD5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0x78, 0x01, 0xD5, 0xDE, 0xFF, 0xD5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0x74, 0x0F, 0xAB, 0xDE, 0xFF, 0xDB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xFF, 0xB3, 0xFD, 0x5F, 0xDF, 0x7F, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xDF, 0xB4, 0x2F, 0xFF, 0xDF, 0x7F, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xDF, 0xD7, 0xAF, 0xFF, 0xBF, 0xBE, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xCF, 0xD7, 0xAF, 0xFF, 0xBF, 0xB9, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xD7, 0xD7, 0x6F, 0xFF, 0xBF, 0xA7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x5B, 0xEA, 0xDF, 0xFF, 0xBF, 0x5F, 0x00 };
// Array of bitmap pointers
const uint8_t* images[] = {
  image1,
  image2,
};

const int imageCount = sizeof(images) / sizeof(images[0]);
int currentImage = 0;
unsigned long lastSwitchTime = 0;
const unsigned long switchInterval = 2000;  // 2 seconds

void setup() {
  Serial.begin(115200);
  delay(100);

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }

  display.clearDisplay();
  display.display();
}

void loop() {
  unsigned long currentTime = millis();

  if (currentTime - lastSwitchTime >= switchInterval) {
    lastSwitchTime = currentTime;

    display.clearDisplay();
    display.drawBitmap(0, 0, images[currentImage], 128, 64, SSD1306_WHITE);
    display.display();

    currentImage = (currentImage + 1) % imageCount;
  }
}
